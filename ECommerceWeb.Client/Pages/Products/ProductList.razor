@page "/Product/List"
@inject HttpClient httpClient

<div class="container">
    <h1>Products</h1>

    <div class="row">
        <div class="col-3">
            <NavLink href="/Product/New/" class="btn btn-success mb-2"><i class="bi bi-plus-square me-1"></i>New Product</NavLink>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="search-bar border rounded-2 border-dark-subtle pe-3">
                <div id="searchBtn" class="text-center d-flex align-items-center" action="" method="">
                    <input  @bind-value="@filter" type="search" class="form-control border-0 bg-transparent" placeholder="Search for products" />
                    <button @onclick="loadData" type="button" class="btn btn-outline-success"><i class="bi bi-search" aria-label="search"></i> </button>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @if (products is null)
        {
            <p>Loading...</p>
        }
        else if (!products.Any())
        {
            <p>Nothing for show for it :( <i class="bi bi-x-square"></i></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="card-title text-uppercase">ID</th>
                        <th scope="col" class="card-title text-uppercase">Name</th>
                        <th scope="col" class="card-title text-uppercase">Price</th>
                        <th scope="col" class="card-title text-uppercase">Category</th>
                        <th scope="col" class="card-title text-uppercase">Brand</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in products)
                    {
                        <tr>
                            <td>@product.Id </td>
                            <td>@product.Name</td>
                            <td>@product.Price</td>
                            <td>@product.Category</td>
                            <td>@product.Brand</td>
                            <td class="auto-adjust">
                                <button class="btn btn-success" @onclick="() => edit(product.Id)"><i class="bi bi-pencil-square"></i></button>
                                <button class="btn btn-danger" @onclick="() => delete(product.Id)"><i class="bi bi-trash"></i></button>

                            </td>
                        </tr>
                    }

                </tbody>
            </table>

        }

    </div>


</div>

@code {

    public ICollection<ProductDtoResponse>? products { get; set; }
    public string? filter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await loadData();
    }

    public async Task loadData()
    {
        products = await httpClient.GetFromJsonAsync<ICollection<ProductDtoResponse>>($"api/Products/filters?filter={filter}");


    }

    public void edit(int id) { }

    public void delete(int id) { }



}
